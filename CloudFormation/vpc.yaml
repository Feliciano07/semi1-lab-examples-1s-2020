AWSTemplateFormatVersion: '2010-09-09'

Description: "Create a VPC with a public subnet and private subnet in two different availability zone"
Parameters:
  VPCName:
    Description: "The name of the VPC being created - pro2"
    Type: String
    Default: "VPC_pro2"
    
  PublicSubnet1Name:
    Description: Name Public Subnet (AZ1)
    Type: String
    Default: public_subnet_1_pro2
  PrivateSubnet1Name:
    Description: Name Private Subnet (AZ1)
    Type: String
    Default: private_subnet_1_pro2
  PublicSubnet2Name:
    Description: Name Public Subnet (AZ2)
    Type: String
    Default: public_subnet_2_pro2
  PrivateSubnet2Name:
    Description: Name Private Subnet (AZ2)
    Type: String
    Default: private_subnet_2_pro2
  InternetGatewayName:
    Description: InternetGateway Name
    Type: String
    Default: igw_pro2
  PublicRouteTable1Name:
    Description: Name Public Route Table (AZ1)
    Type: String
    Default: public_rt1_pro2
  PrivateRouteTable1Name:
    Description: Name Private Route Table (AZ1)
    Type: String
    Default: private_rt1_pro2
  PublicRouteTable2Name:
    Description: Name Public Route Table (AZ2)
    Type: String
    Default: public_rt2_pro2
  PrivateRouteTable2Name:
    Description: Name Private Route Table (AZ2)
    Type: String
    Default: private_rt2_pro2

Mappings:
  SubnetConfig:
    VPC:
      CIDR: "10.0.0.0/16"
    Public1:
      CIDR: "10.0.0.0/24"
    Public2:
      CIDR: "10.0.1.0/24"
    Private1:
      CIDR: "10.0.2.0/24"
    Private2:
      CIDR: "10.0.3.0/24"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Fn::FindInMap:
            - "SubnetConfig"
            - "VPC"
            - "CIDR"
      Tags:
        - Key: Name
          Value: !Ref VPCName
        - Key: Application
          Value: !Ref "AWS::StackName"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGatewayName
        - Key: Application
          Value: !Ref "AWS::StackName"
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
      
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: VPC
      AvailabilityZone: !Select [ 0, !GetAZs { Ref: "AWS::Region" } ]
      CidrBlock:
        Fn::FindInMap:
            - "SubnetConfig"
            - "Public1"
            - "CIDR"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref PublicSubnet1Name
        - Key: Application
          Value: !Ref "AWS::StackName"
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs { Ref: "AWS::Region" } ]
      CidrBlock:
        Fn::FindInMap:
            - "SubnetConfig"
            - "Private1"
            - "CIDR"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnet1Name
        - Key: Application
          Value: !Ref "AWS::StackName"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: VPC
      AvailabilityZone: !Select [1 , !GetAZs { Ref: "AWS::Region" } ]
      CidrBlock:
        Fn::FindInMap:
            - "SubnetConfig"
            - "Public2"
            - "CIDR"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref PublicSubnet2Name
        - Key: Application
          Value: !Ref "AWS::StackName"
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs { Ref: "AWS::Region" } ]
      CidrBlock:
        Fn::FindInMap:
            - "SubnetConfig"
            - "Private2"
            - "CIDR"
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref PrivateSubnet2Name
        - Key: Application
          Value: !Ref "AWS::StackName"
 
  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PublicRouteTable1Name
        - Key: Application
          Value: !Ref "AWS::StackName"
  PublicRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PublicRouteTable2Name
        - Key: Application
          Value: !Ref "AWS::StackName"
  DefaultPublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  DefaultPublicRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable2
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PrivateRouteTable1Name
        - Key: Application
          Value: !Ref "AWS::StackName"
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PrivateRouteTable2Name
        - Key: Application
          Value: !Ref "AWS::StackName"
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
  
Outputs:
  VPCId:
    Description: "VPCId of VPC"
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-VPC"
  PublicSubnet1:
    Description: "SubnetId of public subnet (AZ1)"
    Value:
      Ref: "PublicSubnet1"
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet-AZ1"
  PublicSubnet2:
    Description: "SubnetId of public subnet (AZ2)"
    Value:
      Ref: "PublicSubnet2"
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet-AZ2"
  PrivateSubnet1:
    Description: "SubnetId of private subnet (AZ1)"
    Value:
      Ref: "PrivateSubnet1"
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet-AZ1"
  PrivateSubnet2:
    Description: "SubnetId of private subnet (AZ2)"
    Value:
      Ref: "PrivateSubnet2"
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PrivateSubnet-AZ2"
  InternetGateway:
    Description: "InternetGateway Id"
    Value: !Ref InternetGateway
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-InternetGateway"
  DefaultSecurityGroup:
      Description: "DefaultSecurityGroup Id"
      Value: !GetAtt VPC.DefaultSecurityGroup
      Export:
        Name: !Sub "${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup"